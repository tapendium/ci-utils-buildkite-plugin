#!/usr/bin/env bash

set -eo pipefail

if [[ "${BUILDKITE_PLUGIN_TAP_CI_UTILS_DEBUG:-false}" =~ (true|on|1) ]]; then
	echo "~~~ :hammer: Enabling debug mode"
	set -x
fi

# Echo to standard error
function log {
	echo "$@" 1>&2
}

# Asserts a variable is set
function assert_var() {
	local message
	message=${2:-"Variable $1 is not set."}
	if [ -z "${!1:-}" ]; then
		log "$message"
		exit 1
	fi
}

matrix=${1:-"$MATRIX"}
api_gateway_ws_id=${2:-"$API_GATEWAY_WEBSOCKETAPIID"}
description=${3:-"$DESCRIPTION"}

assert_var matrix "Argument 1: MATRIX is not set"
assert_var api_gateway_ws_id "Argument 2: API_GATEWAY_WEBSOCKETAPIID is not set"
assert_var description "Argument 3: DESCRIPTION is not set"

log "Creating deployment on API Websocket Gateway"

response="$(aws apigatewayv2 create-deployment --stage-name "$matrix" --description "$description-$matrix" --api-id "$api_gateway_ws_id")"
deployment_status=$(jq -r '.DeploymentStatus' <<<"$response" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')

# Check if deployment status is "FAILED"
if [ "$deployment_status" = "FAILED" ]; then
	log "Failed to create deploy on API Websocket Gateway"
	log "Error: "
	log "$response"
	exit 1
fi
log "Created deployment on API Websocket Gateway"
